####################################################################################################
# package management tool
####################################################################################################
[tool.poetry]
name = "commitizen-cz-custom-commits"
version = "0.0.0"
description = "commitizen cz custom commits"
authors = ["Rem_"]
license = "MIT"
readme = "README.md"
packages = [
    {include = "cz_custom_commits", from = "src"}
]

[tool.poetry.build]
generate-setup-file = false

[tool.poetry.dependencies]
python = "^3.10"
commitizen = "^2.42.1"

[tool.poetry.group.dev.dependencies]
pyproject-flake8 = "^6.0.0"
mypy = "^1.2.0"
black = "^23.3.0"
isort = "^5.12.0"

####################################################################################################
# build system
####################################################################################################
[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

####################################################################################################
# automatic changelog generation tool
####################################################################################################
[tool.commitizen]
name = "cz_custom_commits"
version = "0.0.0"
version_files = [
    "pyproject.toml:version"
]
tag_format = "v$version"
update_changelog_on_bump = true
bump_message = "chore: bump from $current_version to $new_version"
# major_version_zero = true # for initial development
github_repo_owner = "silverag-corgi"
github_repo_name = "commitizen-cz-custom-commits"

####################################################################################################
# static code analysis tool - linter
####################################################################################################
[tool.flake8] # pyproject-flake8
extend-exclude = ".venv,"
    # defaults: .svn,CVS,.bzr,.hg,.git,__pycache__,.tox,.nox,.eggs,*.egg
extend-ignore = [
    # defaults: E121,E123,E126,E226,E24,E704,W503,W504
    "E203", # E203 whitespace before ':'
    "F541", # F541 f-string is missing placeholders
    "F841", # F841 local variable name is assigned to but never used
]
per-file-ignores = [
    # F401 module imported but unused
    # F403 'from module import *' used; unable to detect undefined names
    "__init__.py: F401,F403",
]
max-line-length = 100
statistics = true
max-complexity = 18 # if 20 or more, it is hard to test because of complex code.

[tool.mypy]
# Import discovery
files = "src,tests"
ignore_missing_imports = true
# Untyped definitions and calls
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
# None and Optional handling
strict_optional = true
# Configuring warnings
warn_unused_ignores = true
warn_no_return = true
warn_return_any = true
warn_unreachable = true
# Configuring error messages
show_column_numbers = true
show_error_codes = true
pretty = true

####################################################################################################
# static code analysis tool - formatter
####################################################################################################
[tool.black]
line-length = 100

[tool.isort]
line_length = 100
profile = "black"
src_paths = ["src", "tests"]
